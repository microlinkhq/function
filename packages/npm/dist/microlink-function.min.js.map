{"version":3,"file":"microlink-function.min.js","sources":["../src/factory.js","../../../node_modules/.pnpm/is-url-http@2.2.7/node_modules/is-url-http/lightweight.js","../../../node_modules/.pnpm/flattie@1.1.0/node_modules/flattie/dist/index.js","../../../node_modules/.pnpm/qss@2.0.3/node_modules/qss/dist/qss.m.js","../../../node_modules/.pnpm/clean-stack@2.2.0/node_modules/clean-stack/index.js","../../../node_modules/.pnpm/mimic-fn@3.0.0/node_modules/mimic-fn/index.js","../../../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/helpers.js","../../../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/add-error-props.js","../../../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/create-extend-error.js","../../../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/create-error.js","../../../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/index.js","../../../node_modules/.pnpm/@microlink+mql@0.10.15/node_modules/@microlink/mql/src/factory.js","../../../node_modules/.pnpm/@microlink+mql@0.10.15/node_modules/@microlink/mql/src/ky.js","../../../node_modules/.pnpm/@microlink+mql@0.10.15/node_modules/@microlink/mql/src/browser.js","../src/browser.js"],"sourcesContent":["'use strict'\n\nconst factory = ({ mql, VERSION, toCompress }) => {\n  const microlink = (code, mqlOpts, gotOpts) => {\n    const compress = toCompress(code)\n\n    return async (url, opts) => {\n      const { data } = await mql(\n        url,\n        {\n          function: await compress,\n          meta: false,\n          ...mqlOpts,\n          ...opts\n        },\n        gotOpts\n      )\n\n      return data.function\n    }\n  }\n\n  microlink.version = VERSION\n  microlink.mql = mql\n\n  return microlink\n}\n\nmodule.exports = factory\n","'use strict'\n\nconst URL = global.window ? window.URL : require('url').URL\nconst REGEX_HTTP_PROTOCOL = /^https?:\\/\\//i\n\nmodule.exports = url => {\n  try {\n    return REGEX_HTTP_PROTOCOL.test(new URL(url).href)\n  } catch (err) {\n    return false\n  }\n}\n","function iter(output, nullish, sep, val, key) {\n\tvar k, pfx = key ? (key + sep) : key;\n\n\tif (val == null) {\n\t\tif (nullish) output[key] = val;\n\t} else if (typeof val != 'object') {\n\t\toutput[key] = val;\n\t} else if (Array.isArray(val)) {\n\t\tfor (k=0; k < val.length; k++) {\n\t\t\titer(output, nullish, sep, val[k], pfx + k);\n\t\t}\n\t} else {\n\t\tfor (k in val) {\n\t\t\titer(output, nullish, sep, val[k], pfx + k);\n\t\t}\n\t}\n}\n\nfunction flattie(input, glue, toNull) {\n\tvar output = {};\n\tif (typeof input == 'object') {\n\t\titer(output, !!toNull, glue || '.', input, '');\n\t}\n\treturn output;\n}\n\nexports.flattie = flattie;","export function encode(obj, pfx) {\n\tvar k, i, tmp, str='';\n\n\tfor (k in obj) {\n\t\tif ((tmp = obj[k]) !== void 0) {\n\t\t\tif (Array.isArray(tmp)) {\n\t\t\t\tfor (i=0; i < tmp.length; i++) {\n\t\t\t\t\tstr && (str += '&');\n\t\t\t\t\tstr += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr && (str += '&');\n\t\t\t\tstr += encodeURIComponent(k) + '=' + encodeURIComponent(tmp);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (pfx || '') + str;\n}\n\nfunction toValue(mix) {\n\tif (!mix) return '';\n\tvar str = decodeURIComponent(mix);\n\tif (str === 'false') return false;\n\tif (str === 'true') return true;\n\treturn (+str * 0 === 0) ? (+str) : str;\n}\n\nexport function decode(str) {\n\tvar tmp, k, out={}, arr=str.split('&');\n\n\twhile (tmp = arr.shift()) {\n\t\ttmp = tmp.split('=');\n\t\tk = tmp.shift();\n\t\tif (out[k] !== void 0) {\n\t\t\tout[k] = [].concat(out[k], toValue(tmp.shift()));\n\t\t} else {\n\t\t\tout[k] = toValue(tmp.shift());\n\t\t}\n\t}\n\n\treturn out;\n}\n","'use strict';\nconst os = require('os');\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();\n\nmodule.exports = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n","'use strict';\n\nconst copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n//  - one its descriptors is changed\n//  - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nconst mimicFn = (to, from, {ignoreNonConfigurable = false} = {}) => {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n","'use strict'\n\nmodule.exports = {\n  isFunction: obj => typeof obj === 'function',\n  isString: obj => typeof obj === 'string',\n  composeErrorMessage: (code, description) => `${code}, ${description}`,\n  inherits: (ctor, superCtor) => {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    })\n  }\n}\n","'use strict'\n\nconst {isFunction, composeErrorMessage} = require('./helpers')\n\nfunction interfaceObject (error, ...props) {\n  Object.assign(error, ...props)\n\n  error.description = isFunction(error.message) ? error.message(error) : error.message\n\n  error.message = error.code\n   ? composeErrorMessage(error.code, error.description)\n   : error.description\n}\n\nmodule.exports = interfaceObject\n","'use strict'\n\nconst cleanStack = require('clean-stack')\nconst mimicFn = require('mimic-fn')\n\nconst addErrorProps = require('./add-error-props')\nconst {isString} = require('./helpers')\n\nfunction createExtendError (ErrorClass, classProps) {\n  function ExtendError (props) {\n    const error = new ErrorClass()\n    const errorProps = isString(props) ? {message: props} : props\n    addErrorProps(error, classProps, errorProps)\n\n    error.stack = cleanStack(error.stack)\n    return error\n  }\n\n  ExtendError.prototype = ErrorClass.prototype\n  mimicFn(ExtendError, ErrorClass)\n\n  return ExtendError\n}\n\nmodule.exports = createExtendError\n","'use strict'\n\nconst {inherits} = require('./helpers')\nconst mimicFn = require('mimic-fn')\n\nconst REGEX_CLASS_NAME = /[^0-9a-zA-Z_$]/\n\nfunction createError (className) {\n  if (typeof className !== 'string') {\n    throw new TypeError('Expected className to be a string')\n  }\n\n  if (REGEX_CLASS_NAME.test(className)) {\n    throw new Error('className contains invalid characters')\n  }\n\n  function ErrorClass () {\n    Object.defineProperty(this, 'name', {\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    Error.captureStackTrace(this, this.constructor)\n  }\n\n  inherits(ErrorClass, Error)\n  mimicFn(ErrorClass, Error)\n  return ErrorClass\n}\n\nmodule.exports = createError\n","'use strict'\n\nconst createExtendError = require('./create-extend-error')\nconst createError = require('./create-error')\n\nconst createErrorClass = ErrorClass => (className, props) => {\n  const errorClass = createError(className || ErrorClass.name)\n  return createExtendError(errorClass, props)\n}\n\nmodule.exports = createErrorClass(Error)\nmodule.exports.type = createErrorClass(TypeError)\nmodule.exports.range = createErrorClass(RangeError)\nmodule.exports.eval = createErrorClass(EvalError)\nmodule.exports.syntax = createErrorClass(SyntaxError)\nmodule.exports.reference = createErrorClass(ReferenceError)\nmodule.exports.uri = createErrorClass(URIError)\n","const ENDPOINT = {\n  FREE: 'https://api.microlink.io',\n  PRO: 'https://pro.microlink.io'\n}\n\nconst isObject = input => input !== null && typeof input === 'object'\n\nconst parseBody = (input, error, url) => {\n  try {\n    return JSON.parse(input)\n  } catch (_) {\n    const message = input || error.message\n\n    return {\n      status: 'error',\n      data: { url: message },\n      more: 'https://microlink.io/efatalclient',\n      code: 'EFATALCLIENT',\n      message,\n      url\n    }\n  }\n}\n\nconst factory = ({\n  VERSION,\n  MicrolinkError,\n  isUrlHttp,\n  stringify,\n  got,\n  flatten\n}) => {\n  const assertUrl = (url = '') => {\n    if (!isUrlHttp(url)) {\n      const message = `The \\`url\\` as \\`${url}\\` is not valid. Ensure it has protocol (http or https) and hostname.`\n      throw new MicrolinkError({\n        status: 'fail',\n        data: { url: message },\n        more: 'https://microlink.io/docs/api/api-parameters/url',\n        code: 'EINVALURLCLIENT',\n        message,\n        url\n      })\n    }\n  }\n\n  const mapRules = rules => {\n    if (!isObject(rules)) return\n    const flatRules = flatten(rules)\n    return Object.keys(flatRules).reduce((acc, key) => {\n      acc[`data.${key}`] = flatRules[key].toString()\n      return acc\n    }, {})\n  }\n\n  const fetchFromApi = async (apiUrl, opts = {}, retryCount = 0) => {\n    try {\n      const response = await got(apiUrl, opts)\n      return opts.responseType === 'buffer'\n        ? { body: response.body, response }\n        : { ...response.body, response }\n    } catch (err) {\n      const { response = {} } = err\n      const { statusCode, body: rawBody, headers, url: uri = apiUrl } = response\n      const isBuffer = Buffer.isBuffer(rawBody)\n\n      const body =\n        isObject(rawBody) && !isBuffer\n          ? rawBody\n          : parseBody(isBuffer ? rawBody.toString() : rawBody, err, uri)\n\n      if (body.code === 'EFATALCLIENT' && retryCount++ < 2) {\n        return fetchFromApi(apiUrl, opts, retryCount)\n      }\n\n      throw MicrolinkError({\n        ...body,\n        message: body.message,\n        url: uri,\n        statusCode,\n        headers\n      })\n    }\n  }\n\n  const getApiUrl = (\n    url,\n    { data, apiKey, endpoint, retry, cache, ...opts } = {},\n    { responseType = 'json', headers: gotHeaders, ...gotOpts } = {}\n  ) => {\n    const isPro = !!apiKey\n    const apiEndpoint = endpoint || ENDPOINT[isPro ? 'PRO' : 'FREE']\n\n    const apiUrl = `${apiEndpoint}?${stringify({\n      url,\n      ...mapRules(data),\n      ...flatten(opts)\n    })}`\n\n    const headers = isPro\n      ? { ...gotHeaders, 'x-api-key': apiKey }\n      : { ...gotHeaders }\n    return [apiUrl, { ...gotOpts, responseType, cache, retry, headers }]\n  }\n\n  const createMql = defaultOpts => async (url, opts, gotOpts) => {\n    assertUrl(url)\n    const [apiUrl, fetchOpts] = getApiUrl(url, opts, {\n      ...defaultOpts,\n      ...gotOpts\n    })\n    return fetchFromApi(apiUrl, fetchOpts)\n  }\n\n  const mql = createMql()\n  mql.MicrolinkError = MicrolinkError\n  mql.getApiUrl = getApiUrl\n  mql.fetchFromApi = fetchFromApi\n  mql.mapRules = mapRules\n  mql.version = VERSION\n  mql.stream = got.stream\n  mql.buffer = createMql({ responseType: 'buffer' })\n\n  return mql\n}\n\nmodule.exports = factory\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ky = {}));\n})(this, (function (exports) { 'use strict';\n\n    // eslint-lint-disable-next-line @typescript-eslint/naming-convention\n    class HTTPError extends Error {\n        constructor(response, request, options) {\n            const code = (response.status || response.status === 0) ? response.status : '';\n            const title = response.statusText || '';\n            const status = `${code} ${title}`.trim();\n            const reason = status ? `status code ${status}` : 'an unknown error';\n            super(`Request failed with ${reason}`);\n            this.name = 'HTTPError';\n            this.response = response;\n            this.request = request;\n            this.options = options;\n        }\n    }\n\n    class TimeoutError extends Error {\n        constructor(request) {\n            super('Request timed out');\n            this.name = 'TimeoutError';\n            this.request = request;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const isObject = (value) => value !== null && typeof value === 'object';\n\n    const validateAndMerge = (...sources) => {\n        for (const source of sources) {\n            if ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n                throw new TypeError('The `options` argument must be an object');\n            }\n        }\n        return deepMerge({}, ...sources);\n    };\n    const mergeHeaders = (source1 = {}, source2 = {}) => {\n        const result = new globalThis.Headers(source1);\n        const isHeadersInstance = source2 instanceof globalThis.Headers;\n        const source = new globalThis.Headers(source2);\n        for (const [key, value] of source.entries()) {\n            if ((isHeadersInstance && value === 'undefined') || value === undefined) {\n                result.delete(key);\n            }\n            else {\n                result.set(key, value);\n            }\n        }\n        return result;\n    };\n    // TODO: Make this strongly-typed (no `any`).\n    const deepMerge = (...sources) => {\n        let returnValue = {};\n        let headers = {};\n        for (const source of sources) {\n            if (Array.isArray(source)) {\n                if (!Array.isArray(returnValue)) {\n                    returnValue = [];\n                }\n                returnValue = [...returnValue, ...source];\n            }\n            else if (isObject(source)) {\n                for (let [key, value] of Object.entries(source)) {\n                    if (isObject(value) && key in returnValue) {\n                        value = deepMerge(returnValue[key], value);\n                    }\n                    returnValue = { ...returnValue, [key]: value };\n                }\n                if (isObject(source.headers)) {\n                    headers = mergeHeaders(headers, source.headers);\n                    returnValue.headers = headers;\n                }\n            }\n        }\n        return returnValue;\n    };\n\n    const supportsAbortController = typeof globalThis.AbortController === 'function';\n    const supportsStreams = typeof globalThis.ReadableStream === 'function';\n    const supportsFormData = typeof globalThis.FormData === 'function';\n    const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\n    const responseTypes = {\n        json: 'application/json',\n        text: 'text/*',\n        formData: 'multipart/form-data',\n        arrayBuffer: '*/*',\n        blob: '*/*',\n    };\n    // The maximum value of a 32bit int (see issue #117)\n    const maxSafeTimeout = 2147483647;\n    const stop = Symbol('stop');\n\n    const normalizeRequestMethod = (input) => requestMethods.includes(input) ? input.toUpperCase() : input;\n    const retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\n    const retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\n    const retryAfterStatusCodes = [413, 429, 503];\n    const defaultRetryOptions = {\n        limit: 2,\n        methods: retryMethods,\n        statusCodes: retryStatusCodes,\n        afterStatusCodes: retryAfterStatusCodes,\n        maxRetryAfter: Number.POSITIVE_INFINITY,\n    };\n    const normalizeRetryOptions = (retry = {}) => {\n        if (typeof retry === 'number') {\n            return {\n                ...defaultRetryOptions,\n                limit: retry,\n            };\n        }\n        if (retry.methods && !Array.isArray(retry.methods)) {\n            throw new Error('retry.methods must be an array');\n        }\n        if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n            throw new Error('retry.statusCodes must be an array');\n        }\n        return {\n            ...defaultRetryOptions,\n            ...retry,\n            afterStatusCodes: retryAfterStatusCodes,\n        };\n    };\n\n    // `Promise.race()` workaround (#91)\n    const timeout = async (request, abortController, options) => new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n            if (abortController) {\n                abortController.abort();\n            }\n            reject(new TimeoutError(request));\n        }, options.timeout);\n        /* eslint-disable promise/prefer-await-to-then */\n        void options\n            .fetch(request)\n            .then(resolve)\n            .catch(reject)\n            .then(() => {\n            clearTimeout(timeoutId);\n        });\n        /* eslint-enable promise/prefer-await-to-then */\n    });\n    const delay = async (ms) => new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n\n    class Ky {\n        // eslint-disable-next-line complexity\n        constructor(input, options = {}) {\n            var _a, _b;\n            this._retryCount = 0;\n            this._input = input;\n            this._options = {\n                // TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n                credentials: this._input.credentials || 'same-origin',\n                ...options,\n                headers: mergeHeaders(this._input.headers, options.headers),\n                hooks: deepMerge({\n                    beforeRequest: [],\n                    beforeRetry: [],\n                    afterResponse: [],\n                }, options.hooks),\n                method: normalizeRequestMethod((_a = options.method) !== null && _a !== void 0 ? _a : this._input.method),\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                prefixUrl: String(options.prefixUrl || ''),\n                retry: normalizeRetryOptions(options.retry),\n                throwHttpErrors: options.throwHttpErrors !== false,\n                timeout: typeof options.timeout === 'undefined' ? 10000 : options.timeout,\n                fetch: (_b = options.fetch) !== null && _b !== void 0 ? _b : globalThis.fetch.bind(globalThis),\n            };\n            if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n                throw new TypeError('`input` must be a string, URL, or Request');\n            }\n            if (this._options.prefixUrl && typeof this._input === 'string') {\n                if (this._input.startsWith('/')) {\n                    throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n                }\n                if (!this._options.prefixUrl.endsWith('/')) {\n                    this._options.prefixUrl += '/';\n                }\n                this._input = this._options.prefixUrl + this._input;\n            }\n            if (supportsAbortController) {\n                this.abortController = new globalThis.AbortController();\n                if (this._options.signal) {\n                    this._options.signal.addEventListener('abort', () => {\n                        this.abortController.abort();\n                    });\n                }\n                this._options.signal = this.abortController.signal;\n            }\n            this.request = new globalThis.Request(this._input, this._options);\n            if (this._options.searchParams) {\n                // eslint-disable-next-line unicorn/prevent-abbreviations\n                const textSearchParams = typeof this._options.searchParams === 'string'\n                    ? this._options.searchParams.replace(/^\\?/, '')\n                    : new URLSearchParams(this._options.searchParams).toString();\n                // eslint-disable-next-line unicorn/prevent-abbreviations\n                const searchParams = '?' + textSearchParams;\n                const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n                // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n                if (((supportsFormData && this._options.body instanceof globalThis.FormData)\n                    || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n                    this.request.headers.delete('content-type');\n                }\n                this.request = new globalThis.Request(new globalThis.Request(url, this.request), this._options);\n            }\n            if (this._options.json !== undefined) {\n                this._options.body = JSON.stringify(this._options.json);\n                this.request.headers.set('content-type', 'application/json');\n                this.request = new globalThis.Request(this.request, { body: this._options.body });\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        static create(input, options) {\n            const ky = new Ky(input, options);\n            const fn = async () => {\n                if (ky._options.timeout > maxSafeTimeout) {\n                    throw new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n                }\n                // Delay the fetch so that body method shortcuts can set the Accept header\n                await Promise.resolve();\n                let response = await ky._fetch();\n                for (const hook of ky._options.hooks.afterResponse) {\n                    // eslint-disable-next-line no-await-in-loop\n                    const modifiedResponse = await hook(ky.request, ky._options, ky._decorateResponse(response.clone()));\n                    if (modifiedResponse instanceof globalThis.Response) {\n                        response = modifiedResponse;\n                    }\n                }\n                ky._decorateResponse(response);\n                if (!response.ok && ky._options.throwHttpErrors) {\n                    throw new HTTPError(response, ky.request, ky._options);\n                }\n                // If `onDownloadProgress` is passed, it uses the stream API internally\n                /* istanbul ignore next */\n                if (ky._options.onDownloadProgress) {\n                    if (typeof ky._options.onDownloadProgress !== 'function') {\n                        throw new TypeError('The `onDownloadProgress` option must be a function');\n                    }\n                    if (!supportsStreams) {\n                        throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n                    }\n                    return ky._stream(response.clone(), ky._options.onDownloadProgress);\n                }\n                return response;\n            };\n            const isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n            const result = (isRetriableMethod ? ky._retry(fn) : fn());\n            for (const [type, mimeType] of Object.entries(responseTypes)) {\n                result[type] = async () => {\n                    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                    ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n                    const response = (await result).clone();\n                    if (type === 'json') {\n                        if (response.status === 204) {\n                            return '';\n                        }\n                        if (options.parseJson) {\n                            return options.parseJson(await response.text());\n                        }\n                    }\n                    return response[type]();\n                };\n            }\n            return result;\n        }\n        _calculateRetryDelay(error) {\n            this._retryCount++;\n            if (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n                if (error instanceof HTTPError) {\n                    if (!this._options.retry.statusCodes.includes(error.response.status)) {\n                        return 0;\n                    }\n                    const retryAfter = error.response.headers.get('Retry-After');\n                    if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n                        let after = Number(retryAfter);\n                        if (Number.isNaN(after)) {\n                            after = Date.parse(retryAfter) - Date.now();\n                        }\n                        else {\n                            after *= 1000;\n                        }\n                        if (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n                            return 0;\n                        }\n                        return after;\n                    }\n                    if (error.response.status === 413) {\n                        return 0;\n                    }\n                }\n                const BACKOFF_FACTOR = 0.3;\n                return BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n            }\n            return 0;\n        }\n        _decorateResponse(response) {\n            if (this._options.parseJson) {\n                response.json = async () => this._options.parseJson(await response.text());\n            }\n            return response;\n        }\n        async _retry(fn) {\n            try {\n                return await fn();\n                // eslint-disable-next-line @typescript-eslint/no-implicit-any-catch\n            }\n            catch (error) {\n                const ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n                if (ms !== 0 && this._retryCount > 0) {\n                    await delay(ms);\n                    for (const hook of this._options.hooks.beforeRetry) {\n                        // eslint-disable-next-line no-await-in-loop\n                        const hookResult = await hook({\n                            request: this.request,\n                            options: this._options,\n                            error: error,\n                            retryCount: this._retryCount,\n                        });\n                        // If `stop` is returned from the hook, the retry process is stopped\n                        if (hookResult === stop) {\n                            return;\n                        }\n                    }\n                    return this._retry(fn);\n                }\n                throw error;\n            }\n        }\n        async _fetch() {\n            for (const hook of this._options.hooks.beforeRequest) {\n                // eslint-disable-next-line no-await-in-loop\n                const result = await hook(this.request, this._options);\n                if (result instanceof Request) {\n                    this.request = result;\n                    break;\n                }\n                if (result instanceof Response) {\n                    return result;\n                }\n            }\n            if (this._options.timeout === false) {\n                return this._options.fetch(this.request.clone());\n            }\n            return timeout(this.request.clone(), this.abortController, this._options);\n        }\n        /* istanbul ignore next */\n        _stream(response, onDownloadProgress) {\n            const totalBytes = Number(response.headers.get('content-length')) || 0;\n            let transferredBytes = 0;\n            return new globalThis.Response(new globalThis.ReadableStream({\n                async start(controller) {\n                    const reader = response.body.getReader();\n                    if (onDownloadProgress) {\n                        onDownloadProgress({ percent: 0, transferredBytes: 0, totalBytes }, new Uint8Array());\n                    }\n                    async function read() {\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        if (onDownloadProgress) {\n                            transferredBytes += value.byteLength;\n                            const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                            onDownloadProgress({ percent, transferredBytes, totalBytes }, value);\n                        }\n                        controller.enqueue(value);\n                        await read();\n                    }\n                    await read();\n                },\n            }));\n        }\n    }\n\n    /*! MIT License © Sindre Sorhus */\n    const createInstance = (defaults) => {\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n        for (const method of requestMethods) {\n            // eslint-disable-next-line @typescript-eslint/promise-function-async\n            ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, { method }));\n        }\n        ky.create = (newDefaults) => createInstance(validateAndMerge(newDefaults));\n        ky.extend = (newDefaults) => createInstance(validateAndMerge(defaults, newDefaults));\n        ky.stop = stop;\n        return ky;\n    };\n    const ky = createInstance();\n\n    exports.HTTPError = HTTPError;\n    exports.TimeoutError = TimeoutError;\n    exports[\"default\"] = ky;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use strict'\n\nconst isUrlHttp = require('is-url-http/lightweight')\nconst { flattie: flatten } = require('flattie')\nconst { encode: stringify } = require('qss')\nconst whoops = require('whoops')\n\nconst factory = require('./factory')\nconst { default: ky } = require('./ky')\n\nconst MicrolinkError = whoops('MicrolinkError')\n\nconst got = async (url, opts) => {\n  try {\n    if (opts.timeout === undefined) opts.timeout = false\n    const response = await ky(url, opts)\n    const body = await response.json()\n    const { headers, status: statusCode, statusText: statusMessage } = response\n    return { url: response.url, body, headers, statusCode, statusMessage }\n  } catch (err) {\n    if (err.response) {\n      const { response } = err\n      err.response = {\n        ...response,\n        headers: Array.from(response.headers.entries()).reduce(\n          (acc, [key, value]) => {\n            acc[key] = value\n            return acc\n          },\n          {}\n        ),\n        statusCode: response.status,\n        body: await response.text()\n      }\n    }\n    throw err\n  }\n}\n\nmodule.exports = factory({\n  MicrolinkError,\n  isUrlHttp,\n  stringify,\n  got,\n  flatten,\n  VERSION: '__MQL_VERSION__'\n})\n","'use strict'\n\nmodule.exports = require('./factory')({\n  mql: require('@microlink/mql'),\n  toCompress: code => code.toString(),\n  VERSION: '__VERSION__'\n})\n"],"names":["factory_1","mql","VERSION","toCompress","microlink","code","mqlOpts","gotOpts","compress","async","url","opts","data","function","meta","version","URL","global","window","require$$0","REGEX_HTTP_PROTOCOL","iter","output","nullish","sep","val","key","k","pfx","Array","isArray","length","toValue","mix","str","decodeURIComponent","input","glue","toNull","obj","i","tmp","encodeURIComponent","out","arr","split","shift","concat","os","extractPathRegex","pathRegex","homeDir","homedir","copyProperty","to","from","property","ignoreNonConfigurable","toDescriptor","Object","getOwnPropertyDescriptor","fromDescriptor","canCopyProperty","defineProperty","undefined","configurable","writable","enumerable","value","wrappedToString","withName","fromBody","toStringDescriptor","Function","prototype","toStringName","toString","mimicFn_1","name","Reflect","ownKeys","fromPrototype","getPrototypeOf","setPrototypeOf","changePrototype","trim","newToString","bind","changeToString","helpers","isFunction","isString","composeErrorMessage","description","inherits","ctor","superCtor","super_","create","constructor","cleanStack","stack","options","assign","pretty","replace","filter","line","pathMatches","match","includes","test","map","m","p1","join","mimicFn","require$$1","addErrorProps","error","props","message","require$$3","createExtendError_1","ErrorClass","classProps","ExtendError","errorProps","REGEX_CLASS_NAME","createExtendError","createError","className","TypeError","Error","this","captureStackTrace","createErrorClass","errorClass","RangeError","EvalError","SyntaxError","ReferenceError","URIError","ENDPOINT","FREE","PRO","isObject","MicrolinkError","isUrlHttp","stringify","got","flatten","mapRules","rules","flatRules","keys","reduce","acc","fetchFromApi","apiUrl","retryCount","response","responseType","body","err","statusCode","rawBody","headers","uri","isBuffer","Buffer","JSON","parse","_","status","more","parseBody","getApiUrl","apiKey","endpoint","retry","cache","gotHeaders","isPro","createMql","defaultOpts","assertUrl","fetchOpts","stream","buffer","exports","HTTPError","request","statusText","super","TimeoutError","validateAndMerge","sources","source","deepMerge","mergeHeaders","source1","source2","result","globalThis","Headers","isHeadersInstance","entries","delete","set","returnValue","supportsAbortController","AbortController","supportsStreams","ReadableStream","supportsFormData","FormData","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","maxSafeTimeout","stop","Symbol","normalizeRequestMethod","toUpperCase","retryAfterStatusCodes","defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","maxRetryAfter","Number","POSITIVE_INFINITY","normalizeRetryOptions","timeout","abortController","Promise","resolve","reject","timeoutId","setTimeout","abort","fetch","then","catch","clearTimeout","delay","ms","Ky","_a","_b","_retryCount","_input","_options","credentials","hooks","beforeRequest","beforeRetry","afterResponse","method","prefixUrl","String","throwHttpErrors","Request","startsWith","endsWith","signal","addEventListener","searchParams","URLSearchParams","static","ky","fn","_fetch","hook","modifiedResponse","_decorateResponse","clone","Response","ok","onDownloadProgress","_stream","toLowerCase","_retry","type","mimeType","get","parseJson","_calculateRetryDelay","retryAfter","after","isNaN","Date","now","Math","min","totalBytes","transferredBytes","controller","reader","getReader","read","done","close","byteLength","percent","enqueue","Uint8Array","createInstance","defaults","newDefaults","extend","factory","href","flattie","encode","require$$2","whoops","require$$4","default","require$$5","statusMessage"],"mappings":"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"}